import everything

configure app

define cashe?
@app.after_request

app.config sessions

open SQL database

make a function decorator that changes all @app.route functions (except "/") to redirect("/login")

route /
    return homepage (in homepage check session.user_id to determine if showing login/register or logout)

route /login
    error = None
    post -> verify username and password from database and remember to clear all user sessions.
        if: invalid input: error = error = bad input
        if: wrong username/pass: error = wrong username/pass
        if correct:
            give session id: user_id
            can have a flask.flash("SUCCESS!!!") (in html: with messages = get_flashed_messages())
                ul class=flashes, for message in messages...
            redirect to /explore
    render(login.html, error=error) (render when error in post, or just simply get)

route /logout
    clear session
    redirect to homepage

route /register
    error = None
    clear session
    POST -> repeated username, short/bad password, unmatched pass: BOTH let error=error message(s)
        ALSO check birthday is possible (not feb 30, Apr 31...) if not valid error = "message"
        all ok, add new user to db
    render register.html error=error (error comes from invalid post requests, don't render FROM post request)

route /explore
    error = None

    IF POST REQUEST (when clicking to send requests):
        verify if receiving user IS NOT USER HIMSELF
            IS SAME BIRTHDAY
            IS NOT YET A FRIEND / HAVE NOT SENT REQUEST YET
        any wrong don't redirect, pass on error to render at the bot of this func
        else add new info to friend-request db table, then REDIRECT back to explore

    for all user in db with same birthday
    check if those user already friend-listed OR currently requesting BY user
    if not, list those names
    next to names show a textbox (message) and a submit button "send friend request"


    if there are names:
        render explore.html, pass on necessary variable (list of dictionaries of potential friends), AND errors
    if no names:
        render explore with an "message" saying "no friend lol" (not error)



route /requests
    POST -> check if the friend request user's accepting is valid (is in db)
        if invalid, error = xxx
        if valid, add friend relationship to db
            remove friend request from db
            RENDER same page with Success message ("you are now friend with XXXX")

    render html listing ALL pending friend requests (get from db) including error

route /messages
    POST (when setting a message from unread to read) -> if the message is read / message does not exist / message is not directed at receiver:
            error = "invalid option"
        else, set this message as read and render /messages with a "marked as unread!" message

    GET -> display all messages from DB (sender, sent date, info, read/unread) along with error
    (html page when rendering passed on list of messages, EACH WITH THEIR ID THEY CAN RETURN/ Form returns message_id)

/send
    error = None (actually if we can, we can also set success=None, then we optionally set each one in diff cases)
    POST -> check if friend is ACTUALLY in friendlist
        if in friendlist, add message to db and redirect to /sent

        if not, error = "invalid friend"
    GET -> have a select menu of all friends with error

/sent
    display all messages you sent from db
    render
